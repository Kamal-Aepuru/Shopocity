/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as HomeIndexRouteImport } from './routes/Home/index'
import { Route as ProductsCategoryIdIndexRouteImport } from './routes/products/$categoryId/index'
import { Route as ProductsProductDetailsProductIdRouteImport } from './routes/products/productDetails/$productId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeIndexRoute = HomeIndexRouteImport.update({
  id: '/Home/',
  path: '/Home/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsCategoryIdIndexRoute = ProductsCategoryIdIndexRouteImport.update({
  id: '/products/$categoryId/',
  path: '/products/$categoryId/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsProductDetailsProductIdRoute =
  ProductsProductDetailsProductIdRouteImport.update({
    id: '/products/productDetails/$productId',
    path: '/products/productDetails/$productId',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/Home': typeof HomeIndexRoute
  '/products/productDetails/$productId': typeof ProductsProductDetailsProductIdRoute
  '/products/$categoryId': typeof ProductsCategoryIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/Home': typeof HomeIndexRoute
  '/products/productDetails/$productId': typeof ProductsProductDetailsProductIdRoute
  '/products/$categoryId': typeof ProductsCategoryIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/Home/': typeof HomeIndexRoute
  '/products/productDetails/$productId': typeof ProductsProductDetailsProductIdRoute
  '/products/$categoryId/': typeof ProductsCategoryIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/Home'
    | '/products/productDetails/$productId'
    | '/products/$categoryId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/Home'
    | '/products/productDetails/$productId'
    | '/products/$categoryId'
  id:
    | '__root__'
    | '/'
    | '/Home/'
    | '/products/productDetails/$productId'
    | '/products/$categoryId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  HomeIndexRoute: typeof HomeIndexRoute
  ProductsProductDetailsProductIdRoute: typeof ProductsProductDetailsProductIdRoute
  ProductsCategoryIdIndexRoute: typeof ProductsCategoryIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Home/': {
      id: '/Home/'
      path: '/Home'
      fullPath: '/Home'
      preLoaderRoute: typeof HomeIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/$categoryId/': {
      id: '/products/$categoryId/'
      path: '/products/$categoryId'
      fullPath: '/products/$categoryId'
      preLoaderRoute: typeof ProductsCategoryIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/productDetails/$productId': {
      id: '/products/productDetails/$productId'
      path: '/products/productDetails/$productId'
      fullPath: '/products/productDetails/$productId'
      preLoaderRoute: typeof ProductsProductDetailsProductIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HomeIndexRoute: HomeIndexRoute,
  ProductsProductDetailsProductIdRoute: ProductsProductDetailsProductIdRoute,
  ProductsCategoryIdIndexRoute: ProductsCategoryIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
